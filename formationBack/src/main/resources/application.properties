server.port=9090
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximum-pool-size=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/formation
spring.datasource.username=postgres
spring.datasource.password=test123
spring.datasource.driver-class-name=org.postgresql.Driver

##keep the connection alive if idle for a long time(needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
#drop n create table again, good for testing, comment this in production
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false


logging.level.org.springframework=INFO

grokonez.app.jwtSecret=jwtGrokonezSecretKey
grokonez.app.jwtExpiration=864000



